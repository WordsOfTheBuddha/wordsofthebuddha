---
import { getEntry } from "astro:content";

// src/components/BookCard.astro

interface Props {
	title?: string;
	imagePath?: string;
	slug: string;
	description?: string;
	summary?: string;
	author?: string;
	lastUpdated?: string | Date;
}

const { title, description, summary, imagePath, slug, author, lastUpdated } =
	Astro.props;

const bookItem = await getEntry("books", slug);

export const formatDate = (date: string | Date) => {
	return new Date(date).toLocaleDateString("en-US", {
		year: "numeric",
		month: "long",
		day: "numeric",
	});
};
---

<div
	class="relative flex flex-col sm:flex-row items-start w-full p-5 mt-6 rounded-lg bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 transition-shadow duration-200 shadow-md dark:shadow-[0_0_10px_rgba(255,255,255,0.1)] hover:shadow-lg dark:hover:shadow-[0_0_15px_rgba(255,255,255,0.2)]"
>
	<img
		src={imagePath || bookItem.data.imagePath}
		alt={`Cover for ${title}`}
		class="w-full h-96 sm:h-auto w-auto my-1 sm:w-[30%] object-contain sm:mr-4 rounded-lg"
	/>

	<div class="flex-1 flex flex-col">
		<div class="flex items-start justify-between">
			<h2
				class="text-lg sm:text-xl text-center sm:text-left font-semibold flex-1 my-4"
			>
				<a
					href={`/books/${slug}`}
					class="text-text hover:text-link-color transition-colors"
				>
					{title || bookItem.data.title}
				</a>
			</h2>

			<button
				class="text-white hover:text-gray-600 opacity-0 transition-opacity duration-200 ml-4 shrink-0"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="w-6 h-6"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
				</svg>
			</button>
		</div>

		{
			(description || bookItem.data.description) && (
				<p class="mt-1 mb-1 text-text text-center sm:text-left line-clamp-3 text-base sm:text-lg">
					{description || bookItem.data.description}
				</p>
			)
		}

		{
			(summary || bookItem.data.summary) && (
				<p class="mt-2 text-text text-center sm:text-left line-clamp-6 lg:line-clamp-none text-sm sm:text-base">
					{summary || bookItem.data.summary}
				</p>
			)
		}

		{
			(author || bookItem.data.author) && (
				<p class="mt-2 text-sm text-center sm:text-left text-gray-600 dark:text-gray-400">
					By {author || bookItem.data.author}
				</p>
			)
		}

		{
			lastUpdated && (
				<p class="text-gray-500 text-xs mt-2 text-right">
					Updated {formatDate(lastUpdated)}
				</p>
			)
		}
	</div>
</div>

<style>
	/* Maintain existing theme variables integration */
	.text-text {
		color: var(--text-color);
	}
	.hover\:text-link-color:hover {
		color: var(--link-color);
	}
</style>
