---
import ChevronRight from "../assets/chevron-right.svg?raw";
import ChevronDown from "../assets/chevron-down.svg?raw";

const { class: className } = Astro.props;
const url = new URL(Astro.url);
let isPaliMode = url.searchParams.get("pli") === "true";
---

<button
	id="paliButton"
	class:list={[
		"inline-flex items-center gap-1 pl-2 px-4 py-2 text-sm rounded-full transition-all duration-300 hover:bg-gray-100 dark:hover:bg-gray-800",
		className,
	]}
	style={isPaliMode ? "color: var(--layout-active-color)" : ""}
	aria-label="Toggle Pali text"
	aria-pressed={isPaliMode}
	title={isPaliMode ? "Hide Pāli text" : "Show Pāli text alongside English"}
>
	<span
		id="paliIcon"
		class:list={["w-4 h-4", { hidden: isPaliMode }]}
		style="color: inherit"
		set:html={ChevronRight}
	/>
	<span
		id="paliEyeIcon"
		class:list={["w-4 h-4", { hidden: !isPaliMode }]}
		style="color: inherit"
		set:html={ChevronDown}
	/>
	<span>Pāli</span>
</button>

<script>
	import { setPaliState } from "../utils/theme";

	const btn = document.getElementById("paliButton");

	if (btn) {
		btn.addEventListener("click", () => {
			const url = new URL(window.location.href);
			const isPaliMode = url.searchParams.get("pli") === "true";
			const next = !isPaliMode;
			setPaliState(next);
			document.documentElement.classList.toggle("pali-on", next);
			// Update URL param for shareability without reload
			if (next) url.searchParams.set("pli", "true");
			else url.searchParams.delete("pli");
			window.history.replaceState({}, "", url.toString());

			// Update button UI (icons, title, aria)
			const icon = document.getElementById("paliIcon");
			const eye = document.getElementById("paliEyeIcon");
			if (icon && eye) {
				icon.classList.toggle("hidden", next);
				eye.classList.toggle("hidden", !next);
			}
			btn.setAttribute("aria-pressed", String(next));
			btn.title = next
				? "Hide Pāli text"
				: "Show Pāli text alongside English";

			// Notify listeners (e.g., layout toggle visibility)
			document.dispatchEvent(
				new CustomEvent("paliModeChanged", {
					detail: { enabled: next },
				})
			);
		});
	}

	// Initialize from localStorage if available
	const storedPaliMode = localStorage.getItem("paliMode") === "true";
	document.documentElement.classList.toggle("pali-on", storedPaliMode);
	const icon = document.getElementById("paliIcon");
	const eye = document.getElementById("paliEyeIcon");
	if (icon && eye) {
		icon.classList.toggle("hidden", storedPaliMode);
		eye.classList.toggle("hidden", !storedPaliMode);
	}
	if (btn) {
		btn.setAttribute("aria-pressed", String(storedPaliMode));
		btn.title = storedPaliMode
			? "Hide Pāli text"
			: "Show Pāli text alongside English";
	}
</script>
