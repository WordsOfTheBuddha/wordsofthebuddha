---
import { transformId } from "../utils/transformId";
interface Props {
	title: string;
	showFilter?: boolean;
	id?: string;
}

const { title, showFilter = false, id } = Astro.props;
const hasSeparator = title?.includes("-");
console.log("has separator: ", hasSeparator);
const [paliTitle, ...englishParts] = hasSeparator
	? title.split(" - ").map((part: string) => part.trim())
	: [title];
console.log("pali title: ", paliTitle);
const englishTitle = englishParts.join(" - ");

const normalized = (value: string | undefined | null) =>
	(value ?? "")
		.toLowerCase()
		.normalize("NFD")
		.replace(/['’`´]/g, "")
		.replace(/\s+/g, " ")
		.trim();

const transformedId = id ? transformId(id) : "";
const shouldShowId = id && normalized(transformedId) !== normalized(title);
---

<div class="relative flex items-start justify-between mt-2 w-full">
	<h1
		class="text-2xl font-bold text-gray-900 dark:text-gray-100 flex-shrink pl-0"
		id="page-title"
		tabindex="-1"
		aria-label={title}
	>
		{
			shouldShowId && (
				<span class="mr-2 text-primary-color">
					{transformedId}&nbsp;
				</span>
			)
		}
		<slot />
		<span class="pali-paragraph">{paliTitle}</span>
		{hasSeparator && ` - ${englishTitle}`}
	</h1>
	{
		showFilter && (
			<div class="flex-shrink-0 ml-4">
				<input
					type="text"
					id="client-filter"
					placeholder="Filter discourses..."
					autocomplete="off"
					class="w-28 sm:w-48 px-2 py-1 text-sm bg-transparent border-b border-gray-300 dark:border-gray-700 focus:outline-none focus:border-primary-color dark:focus:border-primary-color"
				/>
			</div>
		)
	}
</div>

<style>
	@media print {
		/* Hide filter input for print */
		input[type="text"] {
			display: none !important;
		}

		/* Title styling for print */
		h1 {
			color: #333 !important;
			font-size: 18pt !important;
			font-weight: bold !important;
			margin: 0.5rem 0 !important;
			line-height: 1.4 !important;
		}

		/* ID/number styling */
		h1 span:first-child {
			color: #333 !important;
		}

		/* Pali paragraph styling */
		.pali-paragraph {
			color: #333 !important;
			font-style: italic !important;
		}

		/* Container styling */
		.relative {
			margin: 0 !important;
		}
	}
</style>
