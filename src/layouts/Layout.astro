---
import Analytics from "@vercel/analytics/astro";
import SpeedInsights from "@vercel/speed-insights/astro";
// Add content styling with CSS classes
import "../styles/global.css";
import Navbar from "../components/Navbar.astro";
import Breadcrumbs from "../components/Breadcrumbs.astro";
import LastUpdated from "../components/LastUpdated.astro";
import Footer from "../components/Footer.astro";
import Tooltip from "../components/Tooltip.astro";
import "../styles/content.css";
import Title from "../components/Title.astro";
import Description from "../components/Description.astro";
import FooterNavigation from "../components/FooterNavigation.astro";
import HighlightLayout from "../components/HighlightLayout.astro";

const { id, fp, title, description, prev, next, lastUpdated } = Astro.props;
let SEOTitle = title;
if (title != "Words of the Buddha") {
	SEOTitle = title + " - Words of the Buddha";
}
if (id) {
	SEOTitle = id + " " + title;
}
---

<html lang="en" class="dark" dir="ltr">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>{SEOTitle || "Words of the Buddha"}</title>
		<meta name="description" content={description || "Default Description"} />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
	</head>
	<body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
		<Analytics />
		<SpeedInsights />
		<Tooltip />
		<main class="p-4">
			<div class="max-w-4xl mx-auto prose prose-lg dark:prose-invert">
				<HighlightLayout currentPath={fp}>
					<Navbar />
					<Breadcrumbs path={fp || Astro.url.pathname} />
					<Description description={description} />
					<Title title={title} />
					<slot />
					{lastUpdated && <LastUpdated lastUpdated={lastUpdated} path={fp} />}
					<FooterNavigation prev={prev} next={next} />
					<Footer />
				</HighlightLayout>
			</div>
		</main>
	</body><script>
		document.addEventListener("DOMContentLoaded", () => {
			// Remove empty spans with zero-width spaces
			document.querySelectorAll("span").forEach((span) => {
				const hasVisibleContent = /\S/.test(span.textContent ?? "");
				const hasMeaningfulAttributes = span.attributes.length > 0;

				if (!hasVisibleContent && !hasMeaningfulAttributes) {
					span.remove();
				}
			});
		});
	</script>
</html>
