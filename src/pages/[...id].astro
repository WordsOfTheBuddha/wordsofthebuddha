---
export const prerender = false;

import { render, getEntry } from "astro:content";
import path from "path";
import { routes } from "../utils/routes";
import Layout from "../layouts/Layout.astro";
import { getLastModified } from "../utils/getLastModified";

// Extract slug from params
const { id } = Astro.params;
// console.log("path id is: ", id);

// Find current index in sorted routes
const currentIndex = routes.findIndex((route) => route === id);

if (currentIndex === -1) {
	return Astro.redirect("/404");
}

const contentItem = await getEntry("all", id);

if (!contentItem) {
	return Astro.redirect("/404");
}
// console.log("contentItem is: ", contentItem);

// Extract last two segments of file path and remove extension
const fpParts = (contentItem.filePath ?? "").split("/");
let folder = fpParts[fpParts.length - 2] || "";
const fp = folder ? `${folder}/${id}` : id;

const { Content } = await render(contentItem);

// Find next and previous items
const nextIndex = currentIndex + 1;
const prevIndex = currentIndex - 1;
const next =
	nextIndex < routes.length ? await getEntry("all", routes[nextIndex]) : null;
const prev = prevIndex >= 0 ? await getEntry("all", routes[prevIndex]) : null;

// Get the file's last modified time
const filePath = contentItem.filePath || "";
const lastUpdated = getLastModified(filePath);
---

<Layout
	fp={fp}
	title={contentItem.data.title}
	description={contentItem.data.description}
	prev={prev}
	next={next}
	id={id}
	showReadLater={true}
	showSave={true}
	lastUpdated={lastUpdated}
>
	<Content />
</Layout>
