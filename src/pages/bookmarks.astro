---
export const prerender = false;

import Layout from "../layouts/Layout.astro";
import PostCard from "../components/PostCard.astro";
import { routes } from "../utils/routes";
import { getEntry } from "astro:content";
import BookmarkSolid from "../assets/bookmark-solid.svg?raw";

// Get bookmarked items from cookie
const bookmarks = Astro.cookies.get("wotb_bookmarks")?.json() || {};
const bookmarkedSlugs = Object.keys(bookmarks).filter((key) => bookmarks[key]);

// Get entries that exist in routes
const validSlugs = bookmarkedSlugs.filter((slug) => routes.includes(slug));

// Fetch all valid entries
const entries = await Promise.all(
	validSlugs.map(async (slug) => {
		try {
			return await getEntry("all", slug);
		} catch {
			return null;
		}
	})
);

// Filter out nulls and sort
const validEntries = entries.filter(Boolean);
const sortedEntries = validEntries.sort((a, b) =>
	a.id.localeCompare(b.id, undefined, { numeric: true })
);
---

<Layout title="Bookmarks" titleIcon={BookmarkSolid}>
	<div class="posts-grid">
		{
			sortedEntries.length === 0 ? (
				<div class="text-center py-8 text-gray-500">
					<p>No bookmarks yet.</p>
				</div>
			) : (
				sortedEntries.map((entry) => (
					<PostCard
						id={entry.data.slug}
						title={entry.data.title}
						description={entry.data.description}
						lastUpdated={entry.data.lastUpdated}
					/>
				))
			)
		}
	</div>
</Layout>
